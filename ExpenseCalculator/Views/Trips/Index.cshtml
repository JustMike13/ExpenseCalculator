@model IEnumerable<ExpenseCalculator.Models.Trip>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}
@{
    var user = await UserManager.GetUserAsync(User);
    var userId = user?.Id;
}

<h1>My trips</h1>
<span>
	<span>
		<a type="button" class="btn btn-primary" asp-area="" asp-controller="Trips" asp-action="RegisterToTrip">Register To Trip</a>
	</span>
    <span>
        @{
            if (User.IsInRole("Creator") || User.IsInRole("Admin"))
            {
                <a type="button" class="btn btn-primary" asp-action="Create">Create New Trip</a>
            }
        }
    </span>
</span>
<table class="table">
    <thead>
        <tr>
            <br/>
            <br/>
            <br/>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr href =>
            <td>
                    <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
            </td>
            <td class="justify-content-between">
					<a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-arrow-up-right-square"></i></a>
					@{
                        if ((User.IsInRole("Creator") && userId == item.CreatorId) || User.IsInRole("Admin"))
                        {
							<a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id"><span class="bi bi-pencil-fill"></a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><span class="bi bi-trash-fill"></a>
                        }
                    }
            </td>
        </tr>
}
    </tbody>
</table>
