@model IEnumerable<ExpenseCalculator.Models.Trip>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}
@{
    var user = await UserManager.GetUserAsync(User);
    var userId = user?.Id;
}

<h1>Index</h1>

<p>
    @{
        if (User.IsInRole("Creator") || User.IsInRole("Admin"))
        {
            <a type="button" class="btn btn-primary" asp-action="Create">Create New</a>
        }
    }
</p>
<p>
    <a type="button" class="btn btn-primary" asp-area="" asp-controller="Trips" asp-action="RegisterToTrip">Register to Trip</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatorId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="justify-content-between">
					<a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                    @{
                        if ((User.IsInRole("Creator") && userId == item.CreatorId) || User.IsInRole("Admin"))
                        {
                                <span> | </span> <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <span> | </span> <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    }
            </td>
        </tr>
}
    </tbody>
</table>
